{
    "elements": [
        {
            "brief": "get next unicode character in utf-8 string.",
            "description": "Get next unicode character in utf-8 string. Iteration terminates at '\\0' and repeated invocations will return '\\0'",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;\u00e5\u00e4\u00f6\u00c5\u00c4\u00d6&quot;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">cursor</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">codepoint</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">codepoint</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dmUtf8</span><span class=\"o\">::</span><span class=\"n\">NextChar</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">cursor</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "NextChar",
            "notes": [],
            "parameters": [
                {
                    "doc": "Pointer to string. The pointer value is updated",
                    "is_optional": "False",
                    "name": "str",
                    "types": [
                        "const char**"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "Decoded unicode character",
                    "name": "chr",
                    "types": [
                        "uint32_t"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Get number of unicode characters in utf-8 string",
            "description": "Get number of unicode characters in utf-8 string",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;\u00e5\u00e4\u00f6\u00c5\u00c4\u00d6&quot;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dmUtf8</span><span class=\"o\">::</span><span class=\"n\">StrLen</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "StrLen",
            "notes": [],
            "parameters": [
                {
                    "doc": "Utf8 string",
                    "is_optional": "False",
                    "name": "str",
                    "types": [
                        "const char*"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "Number of characters",
                    "name": "length",
                    "types": [
                        "uint32_t"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Convert a 16-bit unicode character to utf-8",
            "description": "Convert a 16-bit unicode character to utf-8",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "ToUtf8",
            "notes": [
                "Buffer must be of at least 4 characters. The string is *not* NULL-terminated"
            ],
            "parameters": [
                {
                    "doc": "Character to convert",
                    "is_optional": "False",
                    "name": "chr",
                    "types": [
                        "uint16_t"
                    ]
                },
                {
                    "doc": "output Buffer (at least 4 bytes)",
                    "is_optional": "False",
                    "name": "buf",
                    "types": [
                        "char*"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "Number of characters in buffer",
                    "name": "length",
                    "types": [
                        "uint32_t"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        }
    ],
    "info": {
        "brief": "SDK Utf8 API documentation",
        "description": "SDK Utf8 API documentation",
        "description_html": "<p>SDK Utf8 API documentation</p>",
        "file": "utf8.h",
        "include": "dmsdk/dlib/utf8.h",
        "language": "C++",
        "name": "Utf8",
        "namespace": "dmUtf8",
        "notes": [],
        "path": "engine/dlib/src/dmsdk/dlib/utf8.h",
        "type": "Defold C++"
    }
}