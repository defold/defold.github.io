{
    "elements": [
        {
            "brief": "get Android native jobject",
            "description": "Get Android native jobject. Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeAndroidActivity",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "jobject",
                    "types": [
                        "jobject"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Android app object",
            "description": "Get Android app object. Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeAndroidApp",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "app",
                    "types": [
                        "struct android_app*"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Android EGLContext",
            "description": "Get Android EGLContext native handle (EGLContext). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeAndroidEGLContext",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "EGLContext",
                    "types": [
                        "EGLContext"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Android EGLSurface",
            "description": "Get Android EGLSurface native handle (EGLSurface). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeAndroidEGLSurface",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "EGLSurface",
                    "types": [
                        "EGLSurface"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Android native JavaVM",
            "description": "Get Android JavaVM ptr. Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeAndroidJavaVM",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "JavaVM*",
                    "types": [
                        "JavaVM*"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get iOS EAGLContext",
            "description": "Get iOS EAGLContext native handle (id). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeiOSEAGLContext",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "id",
                    "types": [
                        "id"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get iOS UIView",
            "description": "Get iOS UIView native handle (id). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeiOSUIView",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "id",
                    "types": [
                        "id"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get iOS UIWindow",
            "description": "Get iOS UIWindow native handle (id). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeiOSUIWindow",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "id",
                    "types": [
                        "id"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get OSX NSOpenGLContext",
            "description": "Get OSX NSOpenGLContext native handle (id). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeOSXNSOpenGLContext",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "id",
                    "types": [
                        "id"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get OSX NSView",
            "description": "Get OSX NSView native handle (id). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeOSXNSView",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "id",
                    "types": [
                        "id"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get OSX NSWindow",
            "description": "Get OSX NSWindow native handle (id). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeOSXNSWindow",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "id",
                    "types": [
                        "id"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Win32 HGLRC",
            "description": "Get Win32 gl rendercontext native handle (HGLRC). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeWindowsHGLRC",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "HGLRC",
                    "types": [
                        "HGLRC"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Win32 HWND",
            "description": "Get Win32 windows native handle (HWND). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeWindowsHWND",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "HWND",
                    "types": [
                        "HWND"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Linux X11GLXContext",
            "description": "Get Linux X11GLXContext native handle (GLXContext). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeX11GLXContext",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "GLXContext",
                    "types": [
                        "GLXContext"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get Linux X11Window",
            "description": "Get Linux X11Window windows native handle (Window). Any other platform return zero.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "dmGraphics::GetNativeX11Window",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "native handle",
                    "name": "Window",
                    "types": [
                        "Window"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        }
    ],
    "info": {
        "brief": "SDK Graphics API documentation",
        "description": "Platform specific native graphics functions.",
        "description_html": "<p>Platform specific native graphics functions.</p>",
        "file": "graphics_native.h",
        "include": "dmsdk/graphics/graphics_native.h",
        "language": "C++",
        "name": "Graphics",
        "namespace": "dmGraphics",
        "notes": [],
        "path": "engine/graphics/src/dmsdk/graphics/graphics_native.h",
        "type": "Defold C++"
    }
}