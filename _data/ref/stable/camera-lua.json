{
    "elements": [
        {
            "brief": "<span class=\"type\">float</span> camera aspect ratio",
            "description": "The ratio between the frustum width and height. Used when calculating the\nprojection of a perspective camera.\nThe type of the property is number.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"kd\">local</span> <span class=\"n\">aspect_ratio</span> <span class=\"o\">=</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;aspect_ratio&quot;</span><span class=\"p\">)</span>\n  <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;aspect_ratio&quot;</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "aspect_ratio",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "PROPERTY"
        },
        {
            "brief": "get aspect ratio",
            "description": "get aspect ratio",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_aspect_ratio",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the aspect ratio.",
                    "name": "aspect_ratio",
                    "types": [
                        "number"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get all camera URLs",
            "description": "This function returns a table with all the camera URLs that have been\nregistered in the render context.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span><span class=\"n\">v</span> <span class=\"kr\">in</span> <span class=\"nb\">pairs</span><span class=\"p\">(</span><span class=\"n\">camera</span><span class=\"p\">.</span><span class=\"n\">get_cameras</span><span class=\"p\">())</span> <span class=\"kr\">do</span>\n    <span class=\"n\">render</span><span class=\"p\">.</span><span class=\"n\">set_camera</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n    <span class=\"n\">render</span><span class=\"p\">.</span><span class=\"n\">draw</span><span class=\"p\">(...)</span>\n    <span class=\"n\">render</span><span class=\"p\">.</span><span class=\"n\">set_camera</span><span class=\"p\">()</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "camera.get_cameras",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "a table with all camera URLs",
                    "name": "cameras",
                    "types": [
                        "table"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get enabled",
            "description": "get enabled",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_enabled",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "true if the camera is enabled",
                    "name": "flag",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get far z",
            "description": "get far z",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_far_z",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the far z.",
                    "name": "far_z",
                    "types": [
                        "number"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get field of view",
            "description": "get field of view",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_fov",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the field of view.",
                    "name": "fov",
                    "types": [
                        "number"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get near z",
            "description": "get near z",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_near_z",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the near z.",
                    "name": "near_z",
                    "types": [
                        "number"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get orthographic zoom",
            "description": "get orthographic zoom",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_orthographic_zoom",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the zoom level when the camera uses orthographic projection.",
                    "name": "orthographic_zoom",
                    "types": [
                        "number"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get projection matrix",
            "description": "get projection matrix",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_projection",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the projection matrix.",
                    "name": "projection",
                    "types": [
                        "matrix4"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "get view matrix",
            "description": "get view matrix",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.get_view",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the view matrix.",
                    "name": "view",
                    "types": [
                        "matrix4"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "set aspect ratio",
            "description": "set aspect ratio",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.set_aspect_ratio",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                },
                {
                    "doc": "the aspect ratio.",
                    "is_optional": "False",
                    "name": "aspect_ratio",
                    "types": [
                        "number"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "set far z",
            "description": "set far z",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.set_far_z",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                },
                {
                    "doc": "the far z.",
                    "is_optional": "False",
                    "name": "far_z",
                    "types": [
                        "number"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "set field of view",
            "description": "set field of view",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.set_fov",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                },
                {
                    "doc": "the field of view.",
                    "is_optional": "False",
                    "name": "fov",
                    "types": [
                        "number"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "set near z",
            "description": "set near z",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.set_near_z",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                },
                {
                    "doc": "the near z.",
                    "is_optional": "False",
                    "name": "near_z",
                    "types": [
                        "number"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "set orthographic zoom",
            "description": "set orthographic zoom",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "camera.set_orthographic_zoom",
            "notes": [],
            "parameters": [
                {
                    "doc": "camera id",
                    "is_optional": "False",
                    "name": "camera",
                    "types": [
                        "url",
                        "number",
                        "nil"
                    ]
                },
                {
                    "doc": "the zoom level when the camera uses orthographic projection.",
                    "is_optional": "False",
                    "name": "orthographic_zoom",
                    "types": [
                        "number"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "<span class=\"type\">float</span> camera far_z",
            "description": "Camera frustum far plane.\nThe type of the property is float.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"kd\">local</span> <span class=\"n\">far_z</span> <span class=\"o\">=</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;far_z&quot;</span><span class=\"p\">)</span>\n  <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;far_z&quot;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "far_z",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "PROPERTY"
        },
        {
            "brief": "<span class=\"type\">float</span> camera fov",
            "description": "Vertical field of view of the camera.\nThe type of the property is float.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"kd\">local</span> <span class=\"n\">fov</span> <span class=\"o\">=</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;fov&quot;</span><span class=\"p\">)</span>\n  <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;fov&quot;</span><span class=\"p\">,</span> <span class=\"n\">fov</span> <span class=\"o\">+</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n  <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">animate</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;fov&quot;</span><span class=\"p\">,</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">PLAYBACK_ONCE_PINGPONG</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">EASING_LINEAR</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "fov",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "PROPERTY"
        },
        {
            "brief": "<span class=\"type\">float</span> camera near_z",
            "description": "Camera frustum near plane.\nThe type of the property is float.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"kd\">local</span> <span class=\"n\">near_z</span> <span class=\"o\">=</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;near_z&quot;</span><span class=\"p\">)</span>\n  <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;near_z&quot;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "near_z",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "PROPERTY"
        },
        {
            "brief": "<span class=\"type\">float</span> camera orthographic_zoom",
            "description": "Zoom level when using an orthographic projection.\nThe type of the property is float.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"kd\">local</span> <span class=\"n\">orthographic_zoom</span> <span class=\"o\">=</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;orthographic_zoom&quot;</span><span class=\"p\">)</span>\n  <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;orthographic_zoom&quot;</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)</span>\n  <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">animate</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;orthographic_zoom&quot;</span><span class=\"p\">,</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">PLAYBACK_ONCE_PINGPONG</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">EASING_INOUTQUAD</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "orthographic_zoom",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "PROPERTY"
        },
        {
            "brief": "<span class=\"type\">float</span> camera projection",
            "description": "<span class=\"mark\">READ ONLY</span> The calculated projection matrix of the camera.\nThe type of the property is matrix4.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"kd\">local</span> <span class=\"n\">projection</span> <span class=\"o\">=</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;projection&quot;</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "projection",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "PROPERTY"
        },
        {
            "brief": "sets camera properties",
            "description": "\nPost this message to a camera-component to set its properties at run-time.\n",
            "error": "",
            "examples": "In the examples, it is assumed that the instance of the script has a camera-component with id \"camera\".\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;set_camera&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"n\">aspect_ratio</span> <span class=\"o\">=</span> <span class=\"mi\">16</span><span class=\"o\">/</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">fov</span> <span class=\"o\">=</span> <span class=\"nb\">math.pi</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">near_z</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">far_z</span> <span class=\"o\">=</span> <span class=\"mi\">500</span><span class=\"p\">})</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "set_camera",
            "notes": [],
            "parameters": [
                {
                    "doc": "aspect ratio of the screen (width divided by height)",
                    "is_optional": "False",
                    "name": "aspect_ratio",
                    "types": [
                        "number"
                    ]
                },
                {
                    "doc": "field of view of the lens, measured as the angle in radians between the right and left edge",
                    "is_optional": "False",
                    "name": "fov",
                    "types": [
                        "number"
                    ]
                },
                {
                    "doc": "position of the near clipping plane (distance from camera along relative z)",
                    "is_optional": "False",
                    "name": "near_z",
                    "types": [
                        "number"
                    ]
                },
                {
                    "doc": "position of the far clipping plane (distance from camera along relative z)",
                    "is_optional": "False",
                    "name": "far_z",
                    "types": [
                        "number"
                    ]
                },
                {
                    "doc": "set to use an orthographic projection",
                    "is_optional": "False",
                    "name": "orthographic_projection",
                    "types": [
                        "boolean"
                    ]
                },
                {
                    "doc": "zoom level when the camera is using an orthographic projection",
                    "is_optional": "False",
                    "name": "orthographic_zoom",
                    "types": [
                        "number"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "MESSAGE"
        },
        {
            "brief": "<span class=\"type\">float</span> camera view",
            "description": "<span class=\"mark\">READ ONLY</span> The calculated view matrix of the camera.\nThe type of the property is matrix4.",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"kd\">local</span> <span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"n\">go</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;#camera&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;view&quot;</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
            "language": "",
            "members": [],
            "name": "view",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "PROPERTY"
        }
    ],
    "info": {
        "brief": "Camera API documentation",
        "description": "Messages to control camera components and camera focus.",
        "description_html": "<p>Messages to control camera components and camera focus.</p>",
        "file": "camera_ddf.proto",
        "include": "../../proto/gamesys/camera_ddf.proto",
        "language": "Lua",
        "name": "Camera",
        "namespace": "camera",
        "notes": [],
        "path": "../../proto/gamesys/camera_ddf.proto",
        "type": "Defold Lua"
    }
}