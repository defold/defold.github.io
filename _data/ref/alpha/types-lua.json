{
    "elements": [
        {
            "brief": "Check if passed type is hash.",
            "description": "Check if passed type is hash.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "types.is_hash",
            "notes": [],
            "parameters": [
                {
                    "doc": "Variable to check type",
                    "is_optional": "False",
                    "name": "var",
                    "types": [
                        "any"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "True if passed type is hash",
                    "name": "result",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Check if passed type is matrix4.",
            "description": "Check if passed type is matrix4.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "types.is_matrix4",
            "notes": [],
            "parameters": [
                {
                    "doc": "Variable to check type",
                    "is_optional": "False",
                    "name": "var",
                    "types": [
                        "any"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "True if passed type is matrix4",
                    "name": "result",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Check if passed type is quaternion.",
            "description": "Check if passed type is quaternion.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "types.is_quat",
            "notes": [],
            "parameters": [
                {
                    "doc": "Variable to check type",
                    "is_optional": "False",
                    "name": "var",
                    "types": [
                        "any"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "True if passed type is quaternion",
                    "name": "result",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Check if passed type is URL.",
            "description": "Check if passed type is URL.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "types.is_url",
            "notes": [],
            "parameters": [
                {
                    "doc": "Variable to check type",
                    "is_optional": "False",
                    "name": "var",
                    "types": [
                        "any"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "True if passed type is URL",
                    "name": "result",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Check if passed type is vector.",
            "description": "Check if passed type is vector.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "types.is_vector",
            "notes": [
                "'vector3' and 'vector4' types is not a 'vector' type under the hood.\nSo if called `types.is_vector(vmath.vector3())` it returns 'false'"
            ],
            "parameters": [
                {
                    "doc": "Variable to check type",
                    "is_optional": "False",
                    "name": "var",
                    "types": [
                        "any"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "True if passed type is vector",
                    "name": "result",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Check if passed type is vector3.",
            "description": "Check if passed type is vector3.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "types.is_vector3",
            "notes": [],
            "parameters": [
                {
                    "doc": "Variable to check type",
                    "is_optional": "False",
                    "name": "var",
                    "types": [
                        "any"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "True if passed type is vector3",
                    "name": "result",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Check if passed type is vector4.",
            "description": "Check if passed type is vector4.",
            "error": "",
            "examples": "",
            "language": "",
            "members": [],
            "name": "types.is_vector4",
            "notes": [],
            "parameters": [
                {
                    "doc": "Variable to check type",
                    "is_optional": "False",
                    "name": "var",
                    "types": [
                        "any"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "True if passed type is vector4",
                    "name": "result",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        }
    ],
    "info": {
        "brief": "Types API documentation",
        "description": "Functions for checking Defold userdata types.",
        "description_html": "<p>Functions for checking Defold userdata types.</p>",
        "file": "script_types.cpp",
        "language": "Lua",
        "name": "Types",
        "namespace": "types",
        "notes": [],
        "path": "engine/script/src/script_types.cpp",
        "type": "Defold Lua"
    }
}