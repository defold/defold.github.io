{
    "elements": [
        {
            "description": "Initialize Realtime by creating a load balanced client",
            "examples": "",
            "name": "realtime.init",
            "parameters": [
                {
                    "doc": "",
                    "name": "app_id",
                    "types": [
                        "string"
                    ]
                },
                {
                    "doc": "",
                    "name": "app_version",
                    "types": [
                        "string"
                    ]
                },
                {
                    "doc": "",
                    "name": "listener",
                    "types": [
                        "function"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Connect to the server.",
            "examples": "",
            "name": "realtime.connect",
            "parameters": [
                {
                    "doc": "Table with connection options",
                    "name": "options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "username",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "use_datagram_encryption",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "See SERVER_TYPE_* enums",
                            "name": "server_type",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "The IP address or domain name and optionally the port number to connect to. IP addresses can be in IPv4 or IPv6 format",
                            "name": "server_address",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "Sets the HTTP POST data, that will be forwarded to the authentication service, to the provided data.",
                            "name": "auth_data",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "The HTTP GET parameters that will be forwarded to the authentication service to the provided parameters.",
                            "name": "auth_parameters",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "The type of the &quot;Custom Authentication&quot; service that will be used. See AUTH_* enums",
                            "name": "auth_type",
                            "types": [
                                "number"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Update Realtime. Call this from a script component.",
            "examples": "",
            "name": "realtime.update",
            "parameters": [],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Disconnect from server.",
            "examples": "",
            "name": "realtime.disconnect",
            "parameters": [],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Join lobby.",
            "examples": "",
            "name": "realtime.join_lobby",
            "parameters": [
                {
                    "doc": "",
                    "name": "lobby_name",
                    "types": [
                        "string"
                    ]
                },
                {
                    "doc": "",
                    "name": "lobby_type",
                    "types": [
                        "number"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Leave lobby.",
            "examples": "",
            "name": "realtime.leave_lobby",
            "parameters": [],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Create room.",
            "examples": "",
            "name": "realtime.create_room",
            "parameters": [
                {
                    "doc": "The name to create a room with. Must be unique and not in use or the room can't be created. If this is an empty string, then the server will assign a GUID as name.",
                    "name": "game_id",
                    "types": [
                        "string"
                    ]
                },
                {
                    "doc": "",
                    "name": "room_options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "is_visible",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "is_open",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "supress_room_events",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "max_players",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "player_ttl",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "empty_room_ttl",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "Realtime.LOBBYTYPE_* enum",
                            "name": "lobby_type",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "lobby_name",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "publish_user_id",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "Realtime.DIRECTMODE_* enum",
                            "name": "direct_mode",
                            "types": [
                                "numbmer"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "props_listed_in_lobby",
                            "types": [
                                "table"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "custom_room_properties",
                            "types": [
                                "table"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                },
                {
                    "doc": "",
                    "name": "expected_users",
                    "types": [
                        "table"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Join room.",
            "examples": "",
            "name": "realtime.join_room",
            "parameters": [
                {
                    "doc": "The name to create a room with. Must be unique and not in use or the room can't be created. If this is an empty string, then the server will assign a GUID as name.",
                    "name": "game_id",
                    "types": [
                        "string"
                    ]
                },
                {
                    "doc": "",
                    "name": "join_options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "rejoin",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "cache_slice_index",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "expected_users",
                            "types": [
                                "table"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Join or create room.",
            "examples": "",
            "name": "realtime.join_or_create_room",
            "parameters": [
                {
                    "doc": "The name to create a room with. Must be unique and not in use or the room can't be created. If this is an empty string, then the server will assign a GUID as name.",
                    "name": "game_id",
                    "types": [
                        "string"
                    ]
                },
                {
                    "doc": "",
                    "name": "room_options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "is_visible",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "is_open",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "supress_room_events",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "max_players",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "player_ttl",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "empty_room_ttl",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "Realtime.LOBBYTYPE_* enum",
                            "name": "lobby_type",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "lobby_name",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "publish_user_id",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "Realtime.DIRECTMODE_* enum",
                            "name": "direct_mode",
                            "types": [
                                "numbmer"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "props_listed_in_lobby",
                            "types": [
                                "table"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "custom_room_properties",
                            "types": [
                                "table"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                },
                {
                    "doc": "",
                    "name": "join_options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "custom_room_properties",
                            "types": [
                                "table"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "max_players",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "Realtime.MATCHMAKINGMODE_* enum",
                            "name": "matchmaking_mode",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "lobby_name",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "Realtime.LOBBYTYPE_* enum",
                            "name": "lobby_type",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "sql_lobby_filter",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "expected_users",
                            "types": [
                                "table"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Join or create random room.",
            "examples": "",
            "name": "realtime.join_or_create_random_room",
            "parameters": [
                {
                    "doc": "The name to create a room with. Must be unique and not in use or the room can't be created. If this is an empty string, then the server will assign a GUID as name.",
                    "name": "game_id",
                    "types": [
                        "string"
                    ]
                },
                {
                    "doc": "",
                    "name": "room_options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "is_visible",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "is_open",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "supress_room_events",
                            "types": [
                                "boolean"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "max_players",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "player_ttl",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "empty_room_ttl",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "Realtime.LOBBYTYPE_* enum",
                            "name": "lobby_type",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "lobby_name",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "publish_user_id",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "Realtime.DIRECTMODE_* enum",
                            "name": "direct_mode",
                            "types": [
                                "numbmer"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "props_listed_in_lobby",
                            "types": [
                                "table"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "custom_room_properties",
                            "types": [
                                "table"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                },
                {
                    "doc": "",
                    "name": "join_options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "custom_room_properties",
                            "types": [
                                "table"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "max_players",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "Realtime.MATCHMAKINGMODE_* enum",
                            "name": "matchmaking_mode",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "lobby_name",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "Realtime.LOBBYTYPE_* enum",
                            "name": "lobby_type",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "sql_lobby_filter",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "expected_users",
                            "types": [
                                "table"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Join random room.",
            "examples": "",
            "name": "realtime.join_random_room",
            "parameters": [
                {
                    "doc": "",
                    "name": "join_options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "custom_room_properties",
                            "types": [
                                "table"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "max_players",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "Realtime.MATCHMAKINGMODE_* enum",
                            "name": "matchmaking_mode",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "lobby_name",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "Realtime.LOBBYTYPE_* enum",
                            "name": "lobby_type",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "sql_lobby_filter",
                            "types": [
                                "string"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "expected_users",
                            "types": [
                                "table"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Leave room.",
            "examples": "",
            "name": "realtime.leave_room",
            "parameters": [
                {
                    "doc": "",
                    "name": "will_come_back",
                    "types": [
                        "boolean"
                    ]
                },
                {
                    "doc": "",
                    "name": "send_auth_cookie",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Get room list.",
            "examples": "",
            "name": "realtime.get_room_list",
            "parameters": [],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "Sends in-game data to other players in the game.",
            "examples": "",
            "name": "realtime.raise_event",
            "parameters": [
                {
                    "doc": "",
                    "name": "reliable",
                    "types": [
                        "boolean"
                    ]
                },
                {
                    "doc": "",
                    "name": "parameter",
                    "types": [
                        "number"
                    ]
                },
                {
                    "doc": "",
                    "name": "event_code",
                    "types": [
                        "number"
                    ]
                },
                {
                    "doc": "(channel_id, event_caching, receiver_group, interest_group, cache_slice_index, target_players, web_flags, encrypt)",
                    "name": "options",
                    "parameters": [
                        {
                            "doc": "",
                            "name": "channel_id",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "event_caching",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "receiver_group",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "interest_group",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "cache_slice_index",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "target_players",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "web_flags",
                            "types": [
                                "number"
                            ]
                        },
                        {
                            "doc": "",
                            "name": "encrypt",
                            "types": [
                                "boolean"
                            ]
                        }
                    ],
                    "types": [
                        "table"
                    ]
                }
            ],
            "returnvalues": [
                {
                    "doc": "",
                    "name": "boolea"
                }
            ],
            "type": "FUNCTION"
        },
        {
            "description": "Set the auto join lobby flag. The value of the autoJoinLobby flag determines if the client will automatically join the default lobby whenever it has successfully connected and whenever it leaves a game room.",
            "examples": "",
            "name": "realtime.set_auto_join_lobby",
            "parameters": [
                {
                    "doc": "",
                    "name": "auto_join",
                    "types": [
                        "boolean"
                    ]
                }
            ],
            "returnvalues": [],
            "type": "FUNCTION"
        },
        {
            "description": "EVENT_CONNECTIONERRORRETURN",
            "examples": "",
            "name": "EVENT_CONNECTIONERRORRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_CLIENTERRORRETURN",
            "examples": "",
            "name": "EVENT_CLIENTERRORRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_WARNINGRETURN",
            "examples": "",
            "name": "EVENT_WARNINGRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_SERVERERRORRETURN",
            "examples": "",
            "name": "EVENT_SERVERERRORRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_JOINROOMEVENTACTION",
            "examples": "",
            "name": "EVENT_JOINROOMEVENTACTION",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_LEAVEROOMEVENTACTION",
            "examples": "",
            "name": "EVENT_LEAVEROOMEVENTACTION",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_CUSTOMEVENTACTION",
            "examples": "",
            "name": "EVENT_CUSTOMEVENTACTION",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_CONNECTRETURN",
            "examples": "",
            "name": "EVENT_CONNECTRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_DISCONNECTRETURN",
            "examples": "",
            "name": "EVENT_DISCONNECTRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_CREATEROOMRETURN",
            "examples": "",
            "name": "EVENT_CREATEROOMRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_JOINORCREATEROOMRETURN",
            "examples": "",
            "name": "EVENT_JOINORCREATEROOMRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_JOINRANDOMORCREATEROOMRETURN",
            "examples": "",
            "name": "EVENT_JOINRANDOMORCREATEROOMRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_JOINROOMRETURN",
            "examples": "",
            "name": "EVENT_JOINROOMRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_JOINRANDOMROOMRETURN",
            "examples": "",
            "name": "EVENT_JOINRANDOMROOMRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_LEAVEROOMRETURN",
            "examples": "",
            "name": "EVENT_LEAVEROOMRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_JOINLOBBYRETURN",
            "examples": "",
            "name": "EVENT_JOINLOBBYRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_LEAVELOBBYRETURN",
            "examples": "",
            "name": "EVENT_LEAVELOBBYRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONFINDFRIENDSRESPONSE",
            "examples": "",
            "name": "EVENT_ONFINDFRIENDSRESPONSE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONLOBBYSTATSRESPONSE",
            "examples": "",
            "name": "EVENT_ONLOBBYSTATSRESPONSE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_WEBRPCRETURN",
            "examples": "",
            "name": "EVENT_WEBRPCRETURN",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONROOMLISTUPDATE",
            "examples": "",
            "name": "EVENT_ONROOMLISTUPDATE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONROOMPROPERTIESCHANGE",
            "examples": "",
            "name": "EVENT_ONROOMPROPERTIESCHANGE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONPLAYERPROPERTIESCHANGE",
            "examples": "",
            "name": "EVENT_ONPLAYERPROPERTIESCHANGE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONAPPSTATSUPDATE",
            "examples": "",
            "name": "EVENT_ONAPPSTATSUPDATE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONLOBBYSTATSUPDATE",
            "examples": "",
            "name": "EVENT_ONLOBBYSTATSUPDATE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONCACHESLICECHANGED",
            "examples": "",
            "name": "EVENT_ONCACHESLICECHANGED",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONMASTERCLIENTCHANGED",
            "examples": "",
            "name": "EVENT_ONMASTERCLIENTCHANGED",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONCUSTOMAUTHENTICATIONINTERMEDIATESTEP",
            "examples": "",
            "name": "EVENT_ONCUSTOMAUTHENTICATIONINTERMEDIATESTEP",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONAVAILABLEREGIONS",
            "examples": "",
            "name": "EVENT_ONAVAILABLEREGIONS",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONSECRETRECEIVAL",
            "examples": "",
            "name": "EVENT_ONSECRETRECEIVAL",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONDIRECTCONNECTIONESTABLISHED",
            "examples": "",
            "name": "EVENT_ONDIRECTCONNECTIONESTABLISHED",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONDIRECTCONNECTIONFAILEDTOESTABLISH",
            "examples": "",
            "name": "EVENT_ONDIRECTCONNECTIONFAILEDTOESTABLISH",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONDIRECTMESSAGE",
            "examples": "",
            "name": "EVENT_ONDIRECTMESSAGE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONCUSTOMOPERATIONRESPONSE",
            "examples": "",
            "name": "EVENT_ONCUSTOMOPERATIONRESPONSE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "EVENT_ONGETROOMLISTRESPONSE",
            "examples": "",
            "name": "EVENT_ONGETROOMLISTRESPONSE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Use a custom authentication service.",
            "examples": "",
            "name": "AUTH_CUSTOM",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their Steam Account. Pass L\"ticket=[ticket]\" to setParameters().",
            "examples": "",
            "name": "AUTH_STEAM",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their Facebook Account. Pass L\"token=[token]\" to setParameters().",
            "examples": "",
            "name": "AUTH_FACEBOOK",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their Oculus Account. Pass L\"userid=[userid]&nonce=[nonce]\" to setParameters().",
            "examples": "",
            "name": "AUTH_OCULUS",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their PSN Account. Pass L\"token=[token]&env=[env]&userName=[userName]\" to setParameters().",
            "examples": "",
            "name": "AUTH_PLAYSTATION_4",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their XBox Network Account. Pass the XSTS token to setData().",
            "examples": "",
            "name": "AUTH_XBOX",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their HTC Viveport Account and user token. Pass L\"userToken=[userToken]\" to setParameters().",
            "examples": "",
            "name": "AUTH_VIVEPORT",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their Nintendo Account. Pass L\"token=[token]&appversion=[appversion]\" to setParameters(). The appversion is optional.",
            "examples": "",
            "name": "AUTH_NINTENDO_SWITCH",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their PSN Account. Pass L\"token=[token]&env=[env]&userName=[userName]\" to setParameters().",
            "examples": "",
            "name": "AUTH_PLAYSTATION_5",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their Epic Online Services (EOS) Account. Pass L\"token=[token]&ownershipToken=[ownershipToken]\" to setParameters(). The ownershipToken is optional.",
            "examples": "",
            "name": "AUTH_EPIC",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Authenticates users by their Facebook Account. Pass L\"token=[token]\" to setParameters().",
            "examples": "",
            "name": "AUTH_FACEBOOK_GAMING",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Disables custom authentication.",
            "examples": "",
            "name": "AUTH_NONE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Photon Cloud and for self-hosted Photon 5 or higher Server instances",
            "examples": "",
            "name": "SERVER_TYPE_NAME_SERVER",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Self-hosted Photon 4 Server instances",
            "examples": "",
            "name": "SERVER_TYPE_MASTER_SERVER",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Fills up rooms (oldest first) to get players together as fast as possible. Default. Makes most sense with MaxPlayers > 0 and games that can only start with more players.",
            "examples": "",
            "name": "MATCHMAKINGMODE_FILL_ROOM",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Distributes players across available rooms sequentially but takes filters into account. Without filters, rooms get players evenly distributed.",
            "examples": "",
            "name": "MATCHMAKINGMODE_SERIAL_MATCHING",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Joins a (fully) random room. Expected properties must match, but aside from this, any available room might be selected.",
            "examples": "",
            "name": "MATCHMAKINGMODE_RANDOM_MATCHING",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "This lobby type is used unless another lobby type is specified. Room lists will be sent and Client::opJoinRandomRoom() can filter by matching properties.",
            "examples": "",
            "name": "LOBBYTYPE_DEFAULT",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "This lobby type lists rooms like type DEFAULT but  SQL-like \"where\" clauses for filtering can be used with Client::opJoinRandomRoom(). This allows 'bigger', 'less', 'or' and 'and' combinations.",
            "examples": "",
            "name": "LOBBYTYPE_SQL_LOBBY",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "This lobby does not send room lists. It is only used for Client::opJoinRandomRoom(). It keeps rooms available for matchmaking for a while even when there are only inactive users left.",
            "examples": "",
            "name": "LOBBYTYPE_ASYNC_RANDOM_LOBBY",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Do not create any 2p2 connections between the clients. This is the default.",
            "examples": "",
            "name": "DIRECTMODE_NONE",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Each client establishes a direct connection with every other client inside the room.",
            "examples": "",
            "name": "DIRECTMODE_ALL_TO_OTHERS",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "The master client establishes a direct connection with every other client inside the room. All other clients only establish a direct connection with the master client but not with each other.",
            "examples": "",
            "name": "DIRECTMODE_MASTER_TO_OTHERS",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "Each client establishes a direct connection with every client inside the room, including itself.",
            "examples": "",
            "name": "DIRECTMODE_ALL_TO_ALL",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        },
        {
            "description": "The master client establishes a direct connection with every client inside the room, including itself. All other clients only establish a direct connection with the master client but not with each other.",
            "examples": "",
            "name": "DIRECTMODE_MASTER_TO_ALL",
            "parameters": [],
            "returnvalues": [],
            "type": "VARIABLE"
        }
    ],
    "info": {
        "api": "extension-photon-realtime/realtime_api",
        "brief": "realtime",
        "description": "Functions and constants for interacting with Photon Realtime",
        "group": "EXTENSIONS",
        "language": "Lua",
        "name": "extension-photon-realtime",
        "namespace": "realtime",
        "type": "Extension"
    }
}